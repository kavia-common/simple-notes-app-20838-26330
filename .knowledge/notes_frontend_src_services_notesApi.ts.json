{"is_source_file": true, "format": "TypeScript", "description": "This file defines a NotesApiService class providing methods for interacting with a notes backend API, including CRUD operations and search functionality. It encapsulates fetch requests with error handling and exports an instance of the service.", "external_files": ["@/types/note"], "external_methods": [], "published": ["notesApi"], "classes": [{"name": "NotesApiService", "description": "A service class providing methods to interact with the notes API backend, including fetching, creating, updating, deleting, and searching notes."}], "methods": [{"name": "private async makeRequest<T>(endpoint: string, options: RequestInit = {}): Promise<T> { makeRequest", "description": "Internal method to perform fetch requests with generic typing, URL endpoint, and options, handling responses and errors.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "async getAllNotes(): Promise<NotesResponse> { getAllNotes", "description": "Fetches all notes from the backend API.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "async getNoteById(id: string): Promise<Note> { getNoteById", "description": "Fetches a specific note using its ID.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "async createNote(noteData: CreateNoteRequest): Promise<Note> { createNote", "description": "Creates a new note with provided data.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "async updateNote(noteData: UpdateNoteRequest): Promise<Note> { updateNote", "description": "Updates an existing note based on provided data.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "async deleteNote(id: string): Promise<void> { deleteNote", "description": "Deletes a note by ID.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "async searchNotes(query: string): Promise<NotesResponse> { searchNotes", "description": "Searches notes based on a query string.", "scope": "NotesApiService", "scopeKind": "class"}], "calls": ["fetch", "console.error"], "search-terms": ["NotesApiService", "notesApi", "fetchNotes", "HTTP requests", "TypeScript API client"], "state": 2, "file_id": 13, "knowledge_revision": 48, "git_revision": "", "revision_history": [{"28": ""}, {"48": ""}], "ctags": [{"_type": "tag", "name": "API_BASE_URL", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http:\\/\\/localhost:8000\\/api';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "NotesApiService", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^class NotesApiService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^  async createNote(noteData: CreateNoteRequest): Promise<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^  async deleteNote(id: string): Promise<void> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "encodedQuery", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^    const encodedQuery = encodeURIComponent(query);$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.searchNotes", "scopeKind": "method"}, {"_type": "tag", "name": "errorData", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^        const errorData = await response.json().catch(() => ({ message: 'An error occurred' }));$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.makeRequest", "scopeKind": "method"}, {"_type": "tag", "name": "getAllNotes", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^  async getAllNotes(): Promise<NotesResponse> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "getNoteById", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^  async getNoteById(id: string): Promise<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "makeRequest", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^  private async makeRequest<T>(endpoint: string, options: RequestInit = {}): Promise<T> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "notesApi", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^export const notesApi = new NotesApiService();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^      const response = await fetch(`${API_BASE_URL}${endpoint}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.makeRequest", "scopeKind": "method"}, {"_type": "tag", "name": "searchNotes", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^  async searchNotes(query: string): Promise<NotesResponse> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/simple-notes-app-20838-26330/notes_frontend/src/services/notesApi.ts", "pattern": "/^  async updateNote(noteData: UpdateNoteRequest): Promise<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}], "hash": "cae748c03329e67563741dca649a6c8a", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/services/notesApi.ts"}